# Copyright (c) 2024 CRS4
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

@prefix ro: <./> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix ro-crate: <https://github.com/crs4/rocrate-validator/profiles/ro-crate/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix bioschemas: <https://bioschemas.org/> .
@prefix bioschemas-cw: <https://bioschemas.org/ComputationalWorkflow#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix wfrun: <https://w3id.org/ro/terms/workflow-run#> .
@prefix provenance-run-crate: <https://github.com/crs4/rocrate-validator/profiles/provenance-run-crate/> .

provenance-run-crate:ProvRCComputationalWorkflowRequired a sh:NodeShape ;
    sh:name "Provenance Run Crate ComputationalWorkflow MUST" ;
    sh:description "Required properties of the Provenance Run Crate ComputationalWorkflow" ;
    sh:targetClass bioschemas:ComputationalWorkflow ;
    sh:property [
        a sh:PropertyShape ;
        sh:name "ComputationalWorkflow hasPart" ;
        sh:description "ComputationalWorkflow MUST refer to orchestrated tools via hasPart" ;
        sh:path schema:hasPart ;
        sh:or (
            [ sh:class schema:SoftwareApplication ; ]
            [ sh:class schema:SoftwareSourceCode ; ]
            [ sh:class bioschemas:ComputationalWorkflow ; ]
        ) ;
        sh:minCount 1 ;
        sh:message "ComputationalWorkflow MUST refer to orchestrated tools via hasPart" ;
    ] ;
    sh:property [
        a sh:PropertyShape ;
        sh:name "ComputationalWorkflow connection" ;
        sh:description "If the ComputationalWorkflow has a connection, it must point to a ParameterConnection" ;
        sh:path wfrun:connection ;
        sh:class wfrun:ParameterConnection ;
        sh:message "If the ComputationalWorkflow has a connection, it must point to a ParameterConnection" ;
    ] .


provenance-run-crate:ProvRCComputationalWorkflowWithSteps a sh:NodeShape ;
    sh:name "Provenance Run Crate ComputationalWorkflow with steps MUST" ;
    sh:description "Required properties of a Provenance Run Crate ComputationalWorkflow that links to steps" ;
    sh:target [
        a sh:SPARQLTarget ;
        sh:prefixes ro-crate:sparqlPrefixes ;
        sh:select """
            SELECT ?this
            WHERE {
                ?this a bioschemas:ComputationalWorkflow .
                ?this schema:step ?step .
                ?step a schema:HowToStep .
            }
        """
    ] ;
    sh:property [
        a sh:PropertyShape ;
        sh:name "ComputationalWorkflow with steps type" ;
        sh:description "A ComputationalWorkflow that links to steps MUST have the HowTo type" ;
        sh:path rdf:type ;
        sh:hasValue schema:HowTo;
        sh:minCount 1 ;
        sh:message "A ComputationalWorkflow that links to steps MUST have the HowTo type" ;
    ] .
