@prefix ro: <./> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema_org: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xml1: <http://www.w3.org/2001/XMLSchema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rocrate: <https://w3id.org/ro/crate/1.1/> .


ro:RootDataEntityType
    a sh:NodeShape ;
    sh:name "RO-Crate Root Data Entity type" ;
    sh:description "The Root Data Entity MUST be a `Dataset` (as per `schema.org`)" ;
    sh:target [
        a sh:SPARQLTarget ;
        sh:prefixes ro:sparqlPrefixes ;
        sh:select """
            SELECT ?this
            WHERE {
                ?metadatafile schema:about ?this .
                FILTER(contains(str(?metadatafile), "ro-crate-metadata.json"))
            }
        """
    ] ;
    sh:property [
        a sh:PropertyShape ;
        sh:name "Root Data Entity type" ;
        sh:description "Check if the Root Data Entity is a `Dataset` (as per `schema.org`)" ;
        sh:path rdf:type ;
        sh:hasValue schema_org:Dataset ;
        sh:minCount 1 ;
        sh:message """The Root Data Entity MUST be a `Dataset` (as per `schema.org`)""" ;
    ] .
    


rocrate:FindRootDataEntity a sh:NodeShape, sh:hidden;
    sh:name "Identify the Root Data Entity of the RO-Crate" ;
    sh:description """The Root Data Entity is the top-level Data Entity in the RO-Crate and serves as the starting point for the description of the RO-Crate.
        It is a schema:Dataset and is indirectly identified by the about property of the resource ro-crate-metadata.json in the RO-Crate 
        (see the definition at [Finding RO-Crate Root in RDF triple stores](https://www.researchobject.org/ro-crate/1.1/appendix/relative-uris.html#finding-ro-crate-root-in-rdf-triple-stores)).
    """ ;
    sh:target [
        a sh:SPARQLTarget ;
        sh:prefixes ro:sparqlPrefixes ;
        sh:select """
            SELECT ?this
            WHERE {
                ?this a schema:Dataset .
                ?metadatafile schema:about ?this .
                FILTER(contains(str(?metadatafile), "ro-crate-metadata.json"))
            }
        """
    ] ;

    # Expand data graph with triples from the file data entity
    sh:rule [
        a sh:TripleRule ;
        sh:subject sh:this ;
        sh:predicate rdf:type ;
        sh:object rocrate:RootDataEntity ;
    ] .


ro:RootDataEntityExistenceAndType
    a sh:NodeShape ;
    sh:name "RO-Crate Root Data Entity MUST exist" ;
    sh:description "The root of the document MUST be a `Dataset` and must end with /" ;
    sh:targetClass rocrate:RootDataEntity ;
    sh:property [
        a sh:PropertyShape ;
        sh:name "Check existence of the Root Rata Entity" ;
        sh:description "Check if the Root Data Entity exists in the file descriptor" ;
        sh:path rdf:type ;
        sh:hasValue schema_org:Dataset ;
        sh:minCount 1 ;
        sh:message """The file descriptor MUST have a root data entity of type schema_org:Dataset and ending with /""" ;
    ] .
