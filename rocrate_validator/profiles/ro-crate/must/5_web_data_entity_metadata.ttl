@prefix ro: <./> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema_org: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xml1: <http://www.w3.org/2001/XMLSchema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rocrate: <https://w3id.org/ro/crate/1.1/> .
@prefix validator: <https://github.com/crs4/rocrate-validator/> .
@prefix ro-crate: <https://github.com/crs4/rocrate-validator/profiles/ro-crate/> .


ro-crate:WebBasedDataEntity a sh:NodeShape, validator:HiddenShape ;
    sh:name "Web-based Data Entity: REQUIRED properties" ;
    sh:description """A Web-based Data Entity is a `File` identified by an absolute URL""" ;
    
    sh:target [
        a sh:SPARQLTarget ;
        sh:prefixes ro:sparqlPrefixes ;
        sh:select """
            SELECT ?this
            WHERE {
                ?this a schema:MediaObject .
                FILTER(?this != ro:ro-crate-metadata.json)
                FILTER regex(str(?this), "^(https?|ftps?)://", "i")
            }
        """
    ] ;

    # Expand data graph with triples which identify the web-based data entity
    sh:rule [
        a sh:TripleRule ;
        sh:subject sh:this ;
        sh:predicate rdf:type ;
        sh:object ro-crate:WebDataEntity ;
    ] .


ro-crate:WebBasedDataEntityRequiredValueRestriction a sh:NodeShape ;
    sh:name "Web-based Data Entity: RECOMMENDED properties" ;
    sh:description """A Web-based Data Entity MUST be identified by an absolute URL and 
    SHOULD have a `contentSize` and `sdDatePublished` property""" ;
    sh:targetClass ro-crate:WebDataEntity ;
    # Check if the Web-based Data Entity has a contentSize property
    sh:property [
        a sh:PropertyShape ;
        sh:minCount 1 ;
        sh:name "Web-based Data Entity: RECOMMENDED `contentSize` property string" ;
        sh:description """Check if the Web-based Data Entity has a `contentSize` property""" ;
        sh:path schema_org:contentSize ;
        sh:datatype xsd:string ;
        sh:severity sh:Warning ;
        sh:message """Web-based Data Entities SHOULD have a `contentSize` property""" ;
        sh:sparql [
            sh:message "If the value is a string it must be a string representing an integer." ;
            sh:select """
                SELECT ?this ?value
                WHERE {
                    ?this schema:contentSize ?value .
                    FILTER NOT EXISTS {
                        FILTER (xsd:integer(?value) = ?value)
                    }
                }
            """ ;
        ] ;
    ] ;
    # Check if the Web-based Data Entity has a sdDatePublished property
    sh:property [
        a sh:PropertyShape ;
        sh:minCount 1 ;
        sh:name "Web-based Data Entity: RECOMMENDED `sdDatePublished` property" ;
        sh:description """Check if the Web-based Data Entity has a `sdDatePublished` property""" ;
        sh:path schema_org:sdDatePublished ;
        # sh:datatype xsd:dateTime ;
        sh:pattern "^(\\d{4}-\\d{2}-\\d{2})(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?\\+\\d{2}:\\d{2})?$" ;
        sh:severity sh:Warning ;
        sh:message """Web-based Data Entities SHOULD have a `sdDatePublished` property""" ;
    ] .
